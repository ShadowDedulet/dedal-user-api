version: "3.7"

services:
  app: &app
    container_name: user-api
    build:
      context: .
      target: development
    volumes:
      - ./:/opt/app
    tmpfs:
      - /opt/app/tmp/cache
    tty: true
    stdin_open: true
    ports:
      - 3000:3000
    depends_on:
      - db
    env_file:
      - .env
    networks:
      default:
        aliases:
          - user-api
    healthcheck:
      test: ["CMD", "curl", "-fLI", "http://localhost:3000/api/ping.json"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s

  db:
    container_name: db-user-api
    image: postgres:alpine3.18
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s

  nginx:
    container_name: nginx-user-api
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      default:
        aliases:
          - nginx

volumes:
  postgres:

networks:
  default:
    name: projects
    ipam:
      driver: default
      config:
        - subnet: "69.0.0.69/24"
